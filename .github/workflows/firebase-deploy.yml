name: Deploy to Firebase

on:
  push:
    branches:
      - main # Triggers on direct pushes/merges to main
      - dev  # Triggers on direct pushes/merges to dev
  pull_request: # Add this section
    branches:
      - dev  # Triggers when a PR is opened/updated targeting the dev branch
    types: [opened, synchronize, reopened] # Specify PR event types

jobs:
  deploy_firebase:
    runs-on: ubuntu-latest
    env:
      FIREBASE_PROJECT_ID_PROD: koffee-karma
      FIREBASE_PROJECT_ID_DEV: koffee-karma-dev
      # GOOGLE_APPLICATION_CREDENTIALS is set by google-github-actions/auth

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Authenticate to Google Cloud (for Dev)
      - name: Authenticate to Google Cloud (Dev)
        if: (github.event_name == 'pull_request' && github.base_ref == 'dev') || (github.event_name == 'push' && github.ref == 'refs/heads/dev')
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.FIREBASE_SA_DEV }}'

      # Authenticate to Google Cloud (for Prod)
      - name: Authenticate to Google Cloud (Prod)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.FIREBASE_SA_PROD }}'

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Install function dependencies
        run: npm ci
        working-directory: ./functions

      # Deploy to DEV environment (handles both PR to dev and push to dev)
      - name: Deploy to Firebase (Dev)
        if: (github.event_name == 'pull_request' && github.base_ref == 'dev') || (github.event_name == 'push' && github.ref == 'refs/heads/dev')
        env: # Pass secrets as step env vars for easier access
          # SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN_DEV }} # Secrets handled by Secret Manager
          # SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET_DEV }} # Secrets handled by Secret Manager
          KOFFEE_KARMA_CHANNEL_ID: ${{ secrets.KOFFEE_KARMA_CHANNEL_ID_DEV }}
        run: |
          echo "Attempting to deploy to DEV project: ${{ env.FIREBASE_PROJECT_ID_DEV }} using --set-params for strings..."
          # Use --set-params for defineString parameters.
          # defineSecret parameters should automatically use secrets from Secret Manager.
          firebase deploy --only functions \
            --project ${{ env.FIREBASE_PROJECT_ID_DEV }} \
            --set-params KOFFEE_KARMA_CHANNEL_ID=$KOFFEE_KARMA_CHANNEL_ID \
            --non-interactive --force

      # Deploy to PROD environment (handles push to main)
      - name: Deploy to Firebase (Prod)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        env: # Pass secrets as step env vars for easier access
          # SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN_PROD }} # Secrets handled by Secret Manager
          # SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET_PROD }} # Secrets handled by Secret Manager
          KOFFEE_KARMA_CHANNEL_ID: ${{ secrets.KOFFEE_KARMA_CHANNEL_ID_PROD }}
        run: |
          echo "Attempting to deploy to PROD project: ${{ env.FIREBASE_PROJECT_ID_PROD }} using --set-params for strings..."
          # Use --set-params for defineString parameters.
          # defineSecret parameters should automatically use secrets from Secret Manager.
          firebase deploy --only functions \
            --project ${{ env.FIREBASE_PROJECT_ID_PROD }} \
            --set-params KOFFEE_KARMA_CHANNEL_ID=$KOFFEE_KARMA_CHANNEL_ID \
            --non-interactive --force
      
      # No longer need to manually cleanup serviceAccountKey.json as it's not written to disk by this auth method